name: Sonatype Lifecycle SCA Scan

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SonatypeUrl: 'https://finos.sonatype.app/platform/'
      SonatypeAppId: morphir-service
      SonatypeStage: ${{ github.job }}
      SonatypeScanTarget: '.'
      ExcludeDirectory: " -D dirExcludes='**/website/, **/docs/, **/.*'"

    steps:
    - uses: actions/checkout@v1

    # - name: Use Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '16.x'
    # - run: npm install --prod

    - name: Sonatype Lifecycle SCA Scan
      continue-on-error: true
      uses: sonatype-nexus-community/iq-github-action@master
      with:
        username: ${{ secrets.sonatype_user }}
        password: ${{ secrets.sonatype_password }}
        serverUrl: ${{ env.SonatypeUrl }}
        applicationId: ${{ env.SonatypeAppId }}
        stage: ${{ env.SonatypeStage }}
        target: . ${{ env.ExcludeDirectory }}


    - name: Retrieve Sonatype SBOM (SPDX)
      run: |
        mkdir reports/
        iqCredentials=${{ secrets.sonatype_user }}:${{ secrets.sonatype_password }}
        echo 'Get internal app ID for public ID: '$SonatypeAppId
        res=$(curl -u $iqCredentials --location $SonatypeUrl'api/v2/applications?publicId='$SonatypeAppId)
        IFS='"' read -a array <<< "$res"
        echo 'Internal app ID: '${array[5]}
        internalID=${array[5]}
        curl -u $iqCredentials --location $SonatypeUrl'api/v2/spdx/'$internalID'/stages/'$SonatypeStage -H 'Accept: application/xml' > reports/$SonatypeAppId.spdx.json
        echo 'Sonatype SBOM (SPDX): '
        cat reports/$SonatypeAppId.spdx.json

    - name: Upload Sonatype SBOM (SPDX)
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.SonatypeAppId }} Sonatype SBOM (SPDX) 
        path: reports/
    
