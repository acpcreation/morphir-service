name: Sonatype Lifecycle SCA Scan

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      SonatypeUrl: 'https://finos.sonatype.app/platform/'
      # SonatypeAppId: ${{ github.repository }}
      SonatypeAppId: morphir-elm
      SonatypeStage: ${{ github.job }}
      SonatypeScanTarget: '.'
      ExcludeDirectory: " -D dirExcludes='**/website/, **/docs/, **/.*'"
      # SonatypeStageRelease: 'release'
      

    steps:
    - uses: actions/checkout@v1

    # - name: Parse Sonatype App ID from Project
    #   run: |
    #     owner=finos/
    #     owner=acpcreation/
    #     SonatypeAppId=${{ env.SonatypeAppId }}
    #     echo SonatypeAppId="${SonatypeAppId//$owner/}"
    #     echo SonatypeAppId=${SonatypeAppId} >> $GITHUB_ENV
    #     echo ${{ env.SonatypeAppId }}

    # https://github.com/marketplace/actions/nexus-iq-for-github-actions
    # - name: Sonatype Lifecycle Software Composition Analysis (SCA) Scan 
    #   uses: sonatype-nexus-community/iq-github-action@master
    #   with:
    #     username: ${{ secrets.sonatype_user }}
    #     password: ${{ secrets.sonatype_password }}
    #     serverUrl: ${{ env.SonatypeUrl }}
    #     applicationId: ${{ env.SonatypeAppId }}
    #     stage: ${{ env.SonatypeStage }}
    #     target: ${{ env.SonatypeScanTarget }} ${{ env.ExcludeDirectory }}


    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - run: npm install --omit=dev

    - name: Sonatype Lifecycle SCA Scan
      uses: sonatype-nexus-community/iq-github-action@master
      with:
        username: ${{ secrets.sonatype_user }}
        password: ${{ secrets.sonatype_password }}
        serverUrl: ${{ env.SonatypeUrl }}
        applicationId: ${{ env.SonatypeAppId }}
        stage: ${{ env.SonatypeStage }}
        target: . ${{ env.ExcludeDirectory }}


    - name: Retrieve Sonatype SPDX SBOM
      run: |
        mkdir reports/
        iqCredentials=${{ secrets.sonatype_user }}:${{ secrets.sonatype_password }}
        echo 'Get internal app ID for public ID: '$SonatypeAppId
        res=$(curl -u $iqCredentials --location $SonatypeUrl'api/v2/applications?publicId='$SonatypeAppId)
        IFS='"' read -a array <<< "$res"
        echo 'Internal app ID: '${array[5]}
        internalID=${array[5]}
        curl -u $iqCredentials --location $SonatypeUrl'api/v2/spdx/'$internalID'/stages/'$SonatypeStage -H 'Accept: application/xml' > reports/$SonatypeAppId.spdx.json
        echo 'Sonatype SPDX SBOM: '
        cat reports/$SonatypeAppId.spdx.json

    - name: Upload Sonatype SPDX SBOM
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Sonatype Report
        path: reports/
        # ${{ github.workspace }}

    
